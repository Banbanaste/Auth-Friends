{"ast":null,"code":"var _jsxFileName = \"/Users/banbanaste/Desktop/areas/LambdaSchool/Web Applications 2/Auth-Friends/friends-frontend/src/components/Dash.js\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { axiosWithAuth } from \"../utils/axiosWithAuth\";\nimport { useForm } from \"react-hook-form\";\nexport default function Dash(props) {\n  const _useForm = useForm(),\n        register = _useForm.register,\n        handleSubmit = _useForm.handleSubmit,\n        watch = _useForm.watch,\n        errors = _useForm.errors;\n\n  const onSubmit = data => {\n    console.log(data);\n    /* axiosWithAuth()\n      .post(\"/api/friends\", data)\n      .then(res => {\n        console.log(res)\n      })\n      .catch(err => console.log(err)); */\n  };\n\n  useEffect(() => {}, []);\n  return (\n    /* \"handleSubmit\" will validate your inputs before invoking \"onSubmit\" */\n    React.createElement(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"name\",\n      placeholder: \"name\",\n      ref: register,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"age\",\n      placeholder: \"age\",\n      ref: register,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"email\",\n      placeholder: \"email\",\n      ref: register,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }))\n  );\n}","map":{"version":3,"sources":["/Users/banbanaste/Desktop/areas/LambdaSchool/Web Applications 2/Auth-Friends/friends-frontend/src/components/Dash.js"],"names":["React","useEffect","useState","axios","axiosWithAuth","useForm","Dash","props","register","handleSubmit","watch","errors","onSubmit","data","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA,mBACgBF,OAAO,EADvB;AAAA,QAC1BG,QAD0B,YAC1BA,QAD0B;AAAA,QAChBC,YADgB,YAChBA,YADgB;AAAA,QACFC,KADE,YACFA,KADE;AAAA,QACKC,MADL,YACKA,MADL;;AAElC,QAAMC,QAAQ,GAAGC,IAAI,IAAI;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA;;;;;;AAMD,GARD;;AAUAZ,EAAAA,SAAS,CAAC,MAAM,CAAE,CAAT,EAAW,EAAX,CAAT;AAEA;AACE;AACA;AAAM,MAAA,QAAQ,EAAEQ,YAAY,CAACG,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,MAA/B;AAAsC,MAAA,GAAG,EAAEJ,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAO,MAAA,IAAI,EAAC,KAAZ;AAAkB,MAAA,WAAW,EAAC,KAA9B;AAAoC,MAAA,GAAG,EAAEA,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAKE;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,WAAW,EAAC,OAAhC;AAAwC,MAAA,GAAG,EAAEA,QAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAQE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF;AAFF;AAaD","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { axiosWithAuth } from \"../utils/axiosWithAuth\";\nimport { useForm } from \"react-hook-form\";\n\nexport default function Dash(props) {\n  const { register, handleSubmit, watch, errors } = useForm();\n  const onSubmit = data => {\n    console.log(data);\n    /* axiosWithAuth()\n      .post(\"/api/friends\", data)\n      .then(res => {\n        console.log(res)\n      })\n      .catch(err => console.log(err)); */\n  };\n\n  useEffect(() => {}, []);\n\n  return (\n    /* \"handleSubmit\" will validate your inputs before invoking \"onSubmit\" */\n    <form onSubmit={handleSubmit(onSubmit)}>\n      {/* register your input into the hook by invoking the \"register\" function */}\n      <input name=\"name\" placeholder=\"name\" ref={register} />\n      <input name=\"age\" placeholder=\"age\" ref={register} />\n      {/* include validation with required or other standard HTML validation rules */}\n      <input name=\"email\" placeholder=\"email\" ref={register} />\n      {/* errors will return when field validation fails  */}\n\n      <input type=\"submit\" />\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}